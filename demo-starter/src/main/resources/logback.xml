<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds" debug="true">

    <!-- 定义日志的根目录 log.dir是omad传入的启动参数  -->
    <property name="log.base" value="../logs" />
    <property name="log.proj" value="demo" />
    <property name="logPattern" value="%d - demo - %c - %p [%t] %X{logTraceId} [%C{0}:%M] - %m%n"></property>

    <!--ConsoleAppender用于在终端屏幕上的输出-->
    <appender name="stdoutAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${logPattern}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!--将stdoutAppender日志异步记录-->
    <appender name="asyncStdoutAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <appender-ref ref="stdoutAppender" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- error log -->
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/${log.proj}-error.log</File>
        <!--定义日志输出级别-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.base}/${log.proj}-error.log.%d{yyyy-MM-dd}-%i</FileNamePattern>
            <maxHistory>30</maxHistory><!--30天的有效周期，日志量最大200MB-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <!--将errorAppender异步记录-->
    <appender name="asyncErrorAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <appender-ref ref="errorAppender" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- common log -->
    <appender name="commonAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}/${log.proj}.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${log.base}/${log.proj}.log.%d{yyyy-MM-dd}-%i</FileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <appender name="asyncCommonAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <appender-ref ref="commonAppender" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- logger -->
    <!-- 通常情况下配置的业务日志，按工程包名做匹配，异步输出日志 -->
    <logger name="com.mwp.demo" level="INFO" additivity="false">
        <appender-ref ref="asyncCommonAppender" />
        <appender-ref ref="asyncStdoutAppender" />
    </logger>

    <!-- 一些特定的业务模块日志，如支付日志，操作日志等，需要指定特定的logger的name，同步异步可选 -->
    <logger name="operationLog" level="info" additivity="false" >
        <appender-ref ref="commonAppender" />
    </logger>

    <!-- 一些第三方包的日志输出，可能需要做额外处理 -->
    <logger name="com.baidu.disconf.client" level="info" additivity="false" >
        <appender-ref ref="asyncStdoutAppender" />
    </logger>
    <logger name="com.alibaba.dubbo.registry" level="warn" additivity="false" >
        <appender-ref ref="asyncStdoutAppender" />
    </logger>



    <root>
        <level value="INFO" />
        <appender-ref ref="asyncStdoutAppender" />
        <appender-ref ref="asyncErrorAppender" />
    </root>
</configuration>